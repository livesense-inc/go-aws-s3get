name: Test
on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
          cache: true

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Check go mod tidy
        run: |
          cp go.mod go.mod.bak
          make tidy
          diff go.mod go.mod.bak
          rm go.mod.bak

      - name: Test code
        run: go test -v ./...

      - name: Check lint
        uses: golangci/golangci-lint-action@v3

      - name: Check build
        run: |
          make build

      - name: Run minio for integration tests
        run: |
          docker run -d -p 9000:9000 --name minio \
                     -e "MINIO_ROOT_USER=testid" \
                     -e "MINIO_ROOT_PASSWORD=testsecret" \
                     -v /tmp/data:/data \
                     -v /tmp/config:/root/.minio \
                     minio/minio server /data

      - name: Check s3get binary
        env:
          AWS_ACCESS_KEY_ID: "testid"
          AWS_SECRET_ACCESS_KEY: "testsecret"
        run: |
          echo "OK" > ~/test.txt
          aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://test
          aws --endpoint-url http://127.0.0.1:9000/ s3 cp ~/test.txt s3://test/test.txt
          ./bin/s3get --endpoint-url=http://127.0.0.1:9000 s3://test/test.txt - | grep "OK"
          [ $? -ne 0] && exit 1
          ./bin/s3get --endpoint-url=http://127.0.0.1:9000 s3://test/test.txt ~/test.out
          cat ~/test.out | grep "OK"
          [ $? -ne 0] && exit 1
          exit 0
